// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/photos/library/v1/photos_library.proto

package com.google.photos.library.v1.proto;

public interface AlbumOrBuilder
        extends
        // @@protoc_insertion_point(interface_extends:google.photos.library.v1.Album)
        com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * [Ouput only] Identifier for the album. This is a persistent identifier that
     * can be used between sessions to identify this album.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();

    /**
     * <pre>
     * [Ouput only] Identifier for the album. This is a persistent identifier that
     * can be used between sessions to identify this album.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString getIdBytes();

    /**
     * <pre>
     * Name of the album displayed to the user in their Google Photos account.
     * This string shouldn't be more than 500 characters.
     * </pre>
     *
     * <code>string title = 2;</code>
     */
    java.lang.String getTitle();

    /**
     * <pre>
     * Name of the album displayed to the user in their Google Photos account.
     * This string shouldn't be more than 500 characters.
     * </pre>
     *
     * <code>string title = 2;</code>
     */
    com.google.protobuf.ByteString getTitleBytes();

    /**
     * <pre>
     * [Output only] Google Photos URL for the album. The user needs to be signed
     * in to their Google Photos account to access this link.
     * </pre>
     *
     * <code>string product_url = 3;</code>
     */
    java.lang.String getProductUrl();

    /**
     * <pre>
     * [Output only] Google Photos URL for the album. The user needs to be signed
     * in to their Google Photos account to access this link.
     * </pre>
     *
     * <code>string product_url = 3;</code>
     */
    com.google.protobuf.ByteString getProductUrlBytes();

    /**
     * <pre>
     * [Output only] True if you can create media items in this album.
     * This field is based on the scopes granted and permissions of the album. If
     * the scopes are changed or permissions of the album are changed, this field
     * is updated.
     * </pre>
     *
     * <code>bool is_writeable = 4;</code>
     */
    boolean getIsWriteable();

    /**
     * <pre>
     * [Output only] Information related to shared albums.
     * This field is only populated if the album is a shared album, the
     * developer created the album and the user has granted the
     * `photoslibrary.sharing` scope.
     * </pre>
     *
     * <code>.google.photos.library.v1.ShareInfo share_info = 5;</code>
     */
    boolean hasShareInfo();

    /**
     * <pre>
     * [Output only] Information related to shared albums.
     * This field is only populated if the album is a shared album, the
     * developer created the album and the user has granted the
     * `photoslibrary.sharing` scope.
     * </pre>
     *
     * <code>.google.photos.library.v1.ShareInfo share_info = 5;</code>
     */
    com.google.photos.library.v1.proto.ShareInfo getShareInfo();

    /**
     * <pre>
     * [Output only] Information related to shared albums.
     * This field is only populated if the album is a shared album, the
     * developer created the album and the user has granted the
     * `photoslibrary.sharing` scope.
     * </pre>
     *
     * <code>.google.photos.library.v1.ShareInfo share_info = 5;</code>
     */
    com.google.photos.library.v1.proto.ShareInfoOrBuilder getShareInfoOrBuilder();

    /**
     * <pre>
     * [Output only] The number of media items in the album.
     * </pre>
     *
     * <code>int64 media_items_count = 6;</code>
     */
    long getMediaItemsCount();

    /**
     * <pre>
     * [Output only] A URL to the cover photo's bytes. This shouldn't be used as
     * is. Parameters should be appended to this URL before use. For example,
     * `'=w2048-h1024'` sets the dimensions of
     * the cover photo to have a width of 2048 px and height of 1024 px.
     * </pre>
     *
     * <code>string cover_photo_base_url = 7;</code>
     */
    java.lang.String getCoverPhotoBaseUrl();

    /**
     * <pre>
     * [Output only] A URL to the cover photo's bytes. This shouldn't be used as
     * is. Parameters should be appended to this URL before use. For example,
     * `'=w2048-h1024'` sets the dimensions of
     * the cover photo to have a width of 2048 px and height of 1024 px.
     * </pre>
     *
     * <code>string cover_photo_base_url = 7;</code>
     */
    com.google.protobuf.ByteString getCoverPhotoBaseUrlBytes();

    /**
     * <pre>
     * [Output only] Identifier for the media item associated with the cover
     * photo.
     * </pre>
     *
     * <code>string cover_photo_media_item_id = 8;</code>
     */
    java.lang.String getCoverPhotoMediaItemId();

    /**
     * <pre>
     * [Output only] Identifier for the media item associated with the cover
     * photo.
     * </pre>
     *
     * <code>string cover_photo_media_item_id = 8;</code>
     */
    com.google.protobuf.ByteString getCoverPhotoMediaItemIdBytes();
}
