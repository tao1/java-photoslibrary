// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/photos/library/v1/photos_library.proto

package com.google.photos.library.v1.proto;

/**
 * <pre>
 * Request to search for media items in a user's library.
 * If the album id is specified, this call will return the list of media items
 * in the album. If neither filters nor album id are
 * specified, this call will return all media items in a user's Google Photos
 * library.
 * If filters are specified, this call will return all media items in
 * the user's library that fulfill the filter criteria.
 * Filters and album id must not both be set, as this will result in an
 * invalid request.
 * </pre>
 * <p>
 * Protobuf type {@code google.photos.library.v1.SearchMediaItemsRequest}
 */
public final class SearchMediaItemsRequest extends com.google.protobuf.GeneratedMessageV3
        implements
        // @@protoc_insertion_point(message_implements:google.photos.library.v1.SearchMediaItemsRequest)
        SearchMediaItemsRequestOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use SearchMediaItemsRequest.newBuilder() to construct.
    private SearchMediaItemsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }

    private SearchMediaItemsRequest() {
        albumId_ = "";
        pageSize_ = 0;
        pageToken_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
        return this.unknownFields;
    }

    private SearchMediaItemsRequest(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
            boolean done = false;
            while (!done) {
                int tag = input.readTag();
                switch (tag) {
                    case 0:
                        done = true;
                        break;
                    case 10: {
                        java.lang.String s = input.readStringRequireUtf8();

                        albumId_ = s;
                        break;
                    }
                    case 16: {
                        pageSize_ = input.readInt32();
                        break;
                    }
                    case 26: {
                        java.lang.String s = input.readStringRequireUtf8();

                        pageToken_ = s;
                        break;
                    }
                    case 34: {
                        com.google.photos.library.v1.proto.Filters.Builder subBuilder = null;
                        if (filters_ != null) {
                            subBuilder = filters_.toBuilder();
                        }
                        filters_ =
                                input.readMessage(
                                        com.google.photos.library.v1.proto.Filters.parser(), extensionRegistry);
                        if (subBuilder != null) {
                            subBuilder.mergeFrom(filters_);
                            filters_ = subBuilder.buildPartial();
                        }

                        break;
                    }
                    default: {
                        if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                            done = true;
                        }
                        break;
                    }
                }
            }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
        } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
        }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.photos.library.v1.proto.LibraryServiceProto
                .internal_static_google_photos_library_v1_SearchMediaItemsRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
        return com.google.photos.library.v1.proto.LibraryServiceProto
                .internal_static_google_photos_library_v1_SearchMediaItemsRequest_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.google.photos.library.v1.proto.SearchMediaItemsRequest.class,
                        com.google.photos.library.v1.proto.SearchMediaItemsRequest.Builder.class);
    }

    public static final int ALBUM_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object albumId_;

    /**
     * <pre>
     * Identifier of an album. If populated, lists all media items in
     * specified album. Can't set in conjunction with any filters.
     * </pre>
     *
     * <code>string album_id = 1;</code>
     */
    public java.lang.String getAlbumId() {
        java.lang.Object ref = albumId_;
        if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
        } else {
            com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            albumId_ = s;
            return s;
        }
    }

    /**
     * <pre>
     * Identifier of an album. If populated, lists all media items in
     * specified album. Can't set in conjunction with any filters.
     * </pre>
     *
     * <code>string album_id = 1;</code>
     */
    public com.google.protobuf.ByteString getAlbumIdBytes() {
        java.lang.Object ref = albumId_;
        if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b =
                    com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
            albumId_ = b;
            return b;
        } else {
            return (com.google.protobuf.ByteString) ref;
        }
    }

    public static final int PAGE_SIZE_FIELD_NUMBER = 2;
    private int pageSize_;

    /**
     * <pre>
     * Maximum number of media items to return in the response. The default number
     * of media items to return at a time is 25. The maximum
     * `pageSize` is 100.
     * </pre>
     *
     * <code>int32 page_size = 2;</code>
     */
    public int getPageSize() {
        return pageSize_;
    }

    public static final int PAGE_TOKEN_FIELD_NUMBER = 3;
    private volatile java.lang.Object pageToken_;

    /**
     * <pre>
     * A continuation token to get the next page of the results. Adding this to
     * the request returns the rows after the `pageToken`. The `pageToken` should
     * be the value returned in the `nextPageToken` parameter in the response to
     * the `searchMediaItems` request.
     * </pre>
     *
     * <code>string page_token = 3;</code>
     */
    public java.lang.String getPageToken() {
        java.lang.Object ref = pageToken_;
        if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
        } else {
            com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            pageToken_ = s;
            return s;
        }
    }

    /**
     * <pre>
     * A continuation token to get the next page of the results. Adding this to
     * the request returns the rows after the `pageToken`. The `pageToken` should
     * be the value returned in the `nextPageToken` parameter in the response to
     * the `searchMediaItems` request.
     * </pre>
     *
     * <code>string page_token = 3;</code>
     */
    public com.google.protobuf.ByteString getPageTokenBytes() {
        java.lang.Object ref = pageToken_;
        if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b =
                    com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
            pageToken_ = b;
            return b;
        } else {
            return (com.google.protobuf.ByteString) ref;
        }
    }

    public static final int FILTERS_FIELD_NUMBER = 4;
    private com.google.photos.library.v1.proto.Filters filters_;

    /**
     * <pre>
     * Filters to apply to the request. Can't be set in conjunction with an
     * `albumId`.
     * </pre>
     *
     * <code>.google.photos.library.v1.Filters filters = 4;</code>
     */
    public boolean hasFilters() {
        return filters_ != null;
    }

    /**
     * <pre>
     * Filters to apply to the request. Can't be set in conjunction with an
     * `albumId`.
     * </pre>
     *
     * <code>.google.photos.library.v1.Filters filters = 4;</code>
     */
    public com.google.photos.library.v1.proto.Filters getFilters() {
        return filters_ == null
                ? com.google.photos.library.v1.proto.Filters.getDefaultInstance()
                : filters_;
    }

    /**
     * <pre>
     * Filters to apply to the request. Can't be set in conjunction with an
     * `albumId`.
     * </pre>
     *
     * <code>.google.photos.library.v1.Filters filters = 4;</code>
     */
    public com.google.photos.library.v1.proto.FiltersOrBuilder getFiltersOrBuilder() {
        return getFilters();
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        if (!getAlbumIdBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, albumId_);
        }
        if (pageSize_ != 0) {
            output.writeInt32(2, pageSize_);
        }
        if (!getPageTokenBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 3, pageToken_);
        }
        if (filters_ != null) {
            output.writeMessage(4, getFilters());
        }
        unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getAlbumIdBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, albumId_);
        }
        if (pageSize_ != 0) {
            size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, pageSize_);
        }
        if (!getPageTokenBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, pageToken_);
        }
        if (filters_ != null) {
            size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, getFilters());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof com.google.photos.library.v1.proto.SearchMediaItemsRequest)) {
            return super.equals(obj);
        }
        com.google.photos.library.v1.proto.SearchMediaItemsRequest other =
                (com.google.photos.library.v1.proto.SearchMediaItemsRequest) obj;

        boolean result = true;
        result = result && getAlbumId().equals(other.getAlbumId());
        result = result && (getPageSize() == other.getPageSize());
        result = result && getPageToken().equals(other.getPageToken());
        result = result && (hasFilters() == other.hasFilters());
        if (hasFilters()) {
            result = result && getFilters().equals(other.getFilters());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
    }

    @java.lang.Override
    public int hashCode() {
        if (memoizedHashCode != 0) {
            return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ALBUM_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAlbumId().hashCode();
        hash = (37 * hash) + PAGE_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getPageSize();
        hash = (37 * hash) + PAGE_TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getPageToken().hashCode();
        if (hasFilters()) {
            hash = (37 * hash) + FILTERS_FIELD_NUMBER;
            hash = (53 * hash) + getFilters().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
    }

    public static com.google.photos.library.v1.proto.SearchMediaItemsRequest parseFrom(
            java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static com.google.photos.library.v1.proto.SearchMediaItemsRequest parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.photos.library.v1.proto.SearchMediaItemsRequest parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static com.google.photos.library.v1.proto.SearchMediaItemsRequest parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.photos.library.v1.proto.SearchMediaItemsRequest parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static com.google.photos.library.v1.proto.SearchMediaItemsRequest parseFrom(
            byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.photos.library.v1.proto.SearchMediaItemsRequest parseFrom(
            java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.photos.library.v1.proto.SearchMediaItemsRequest parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
                PARSER, input, extensionRegistry);
    }

    public static com.google.photos.library.v1.proto.SearchMediaItemsRequest parseDelimitedFrom(
            java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.photos.library.v1.proto.SearchMediaItemsRequest parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
                PARSER, input, extensionRegistry);
    }

    public static com.google.photos.library.v1.proto.SearchMediaItemsRequest parseFrom(
            com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.photos.library.v1.proto.SearchMediaItemsRequest parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
                PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
            com.google.photos.library.v1.proto.SearchMediaItemsRequest prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
        return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
    }

    /**
     * <pre>
     * Request to search for media items in a user's library.
     * If the album id is specified, this call will return the list of media items
     * in the album. If neither filters nor album id are
     * specified, this call will return all media items in a user's Google Photos
     * library.
     * If filters are specified, this call will return all media items in
     * the user's library that fulfill the filter criteria.
     * Filters and album id must not both be set, as this will result in an
     * invalid request.
     * </pre>
     * <p>
     * Protobuf type {@code google.photos.library.v1.SearchMediaItemsRequest}
     */
    public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
            implements
            // @@protoc_insertion_point(builder_implements:google.photos.library.v1.SearchMediaItemsRequest)
            com.google.photos.library.v1.proto.SearchMediaItemsRequestOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return com.google.photos.library.v1.proto.LibraryServiceProto
                    .internal_static_google_photos_library_v1_SearchMediaItemsRequest_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.google.photos.library.v1.proto.LibraryServiceProto
                    .internal_static_google_photos_library_v1_SearchMediaItemsRequest_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.google.photos.library.v1.proto.SearchMediaItemsRequest.class,
                            com.google.photos.library.v1.proto.SearchMediaItemsRequest.Builder.class);
        }

        // Construct using com.google.photos.library.v1.proto.SearchMediaItemsRequest.newBuilder()
        private Builder() {
            maybeForceBuilderInitialization();
        }

        private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
            }
        }

        @java.lang.Override
        public Builder clear() {
            super.clear();
            albumId_ = "";

            pageSize_ = 0;

            pageToken_ = "";

            if (filtersBuilder_ == null) {
                filters_ = null;
            } else {
                filters_ = null;
                filtersBuilder_ = null;
            }
            return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
            return com.google.photos.library.v1.proto.LibraryServiceProto
                    .internal_static_google_photos_library_v1_SearchMediaItemsRequest_descriptor;
        }

        @java.lang.Override
        public com.google.photos.library.v1.proto.SearchMediaItemsRequest getDefaultInstanceForType() {
            return com.google.photos.library.v1.proto.SearchMediaItemsRequest.getDefaultInstance();
        }

        @java.lang.Override
        public com.google.photos.library.v1.proto.SearchMediaItemsRequest build() {
            com.google.photos.library.v1.proto.SearchMediaItemsRequest result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }

        @java.lang.Override
        public com.google.photos.library.v1.proto.SearchMediaItemsRequest buildPartial() {
            com.google.photos.library.v1.proto.SearchMediaItemsRequest result =
                    new com.google.photos.library.v1.proto.SearchMediaItemsRequest(this);
            result.albumId_ = albumId_;
            result.pageSize_ = pageSize_;
            result.pageToken_ = pageToken_;
            if (filtersBuilder_ == null) {
                result.filters_ = filters_;
            } else {
                result.filters_ = filtersBuilder_.build();
            }
            onBuilt();
            return result;
        }

        @java.lang.Override
        public Builder clone() {
            return (Builder) super.clone();
        }

        @java.lang.Override
        public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
            return (Builder) super.setField(field, value);
        }

        @java.lang.Override
        public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
        }

        @java.lang.Override
        public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
        }

        @java.lang.Override
        public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
        }

        @java.lang.Override
        public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.google.photos.library.v1.proto.SearchMediaItemsRequest) {
                return mergeFrom((com.google.photos.library.v1.proto.SearchMediaItemsRequest) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }

        public Builder mergeFrom(com.google.photos.library.v1.proto.SearchMediaItemsRequest other) {
            if (other == com.google.photos.library.v1.proto.SearchMediaItemsRequest.getDefaultInstance())
                return this;
            if (!other.getAlbumId().isEmpty()) {
                albumId_ = other.albumId_;
                onChanged();
            }
            if (other.getPageSize() != 0) {
                setPageSize(other.getPageSize());
            }
            if (!other.getPageToken().isEmpty()) {
                pageToken_ = other.pageToken_;
                onChanged();
            }
            if (other.hasFilters()) {
                mergeFilters(other.getFilters());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
            return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            com.google.photos.library.v1.proto.SearchMediaItemsRequest parsedMessage = null;
            try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage =
                        (com.google.photos.library.v1.proto.SearchMediaItemsRequest) e.getUnfinishedMessage();
                throw e.unwrapIOException();
            } finally {
                if (parsedMessage != null) {
                    mergeFrom(parsedMessage);
                }
            }
            return this;
        }

        private java.lang.Object albumId_ = "";

        /**
         * <pre>
         * Identifier of an album. If populated, lists all media items in
         * specified album. Can't set in conjunction with any filters.
         * </pre>
         *
         * <code>string album_id = 1;</code>
         */
        public java.lang.String getAlbumId() {
            java.lang.Object ref = albumId_;
            if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                albumId_ = s;
                return s;
            } else {
                return (java.lang.String) ref;
            }
        }

        /**
         * <pre>
         * Identifier of an album. If populated, lists all media items in
         * specified album. Can't set in conjunction with any filters.
         * </pre>
         *
         * <code>string album_id = 1;</code>
         */
        public com.google.protobuf.ByteString getAlbumIdBytes() {
            java.lang.Object ref = albumId_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                albumId_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * Identifier of an album. If populated, lists all media items in
         * specified album. Can't set in conjunction with any filters.
         * </pre>
         *
         * <code>string album_id = 1;</code>
         */
        public Builder setAlbumId(java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            albumId_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Identifier of an album. If populated, lists all media items in
         * specified album. Can't set in conjunction with any filters.
         * </pre>
         *
         * <code>string album_id = 1;</code>
         */
        public Builder clearAlbumId() {

            albumId_ = getDefaultInstance().getAlbumId();
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Identifier of an album. If populated, lists all media items in
         * specified album. Can't set in conjunction with any filters.
         * </pre>
         *
         * <code>string album_id = 1;</code>
         */
        public Builder setAlbumIdBytes(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            albumId_ = value;
            onChanged();
            return this;
        }

        private int pageSize_;

        /**
         * <pre>
         * Maximum number of media items to return in the response. The default number
         * of media items to return at a time is 25. The maximum
         * `pageSize` is 100.
         * </pre>
         *
         * <code>int32 page_size = 2;</code>
         */
        public int getPageSize() {
            return pageSize_;
        }

        /**
         * <pre>
         * Maximum number of media items to return in the response. The default number
         * of media items to return at a time is 25. The maximum
         * `pageSize` is 100.
         * </pre>
         *
         * <code>int32 page_size = 2;</code>
         */
        public Builder setPageSize(int value) {

            pageSize_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Maximum number of media items to return in the response. The default number
         * of media items to return at a time is 25. The maximum
         * `pageSize` is 100.
         * </pre>
         *
         * <code>int32 page_size = 2;</code>
         */
        public Builder clearPageSize() {

            pageSize_ = 0;
            onChanged();
            return this;
        }

        private java.lang.Object pageToken_ = "";

        /**
         * <pre>
         * A continuation token to get the next page of the results. Adding this to
         * the request returns the rows after the `pageToken`. The `pageToken` should
         * be the value returned in the `nextPageToken` parameter in the response to
         * the `searchMediaItems` request.
         * </pre>
         *
         * <code>string page_token = 3;</code>
         */
        public java.lang.String getPageToken() {
            java.lang.Object ref = pageToken_;
            if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                pageToken_ = s;
                return s;
            } else {
                return (java.lang.String) ref;
            }
        }

        /**
         * <pre>
         * A continuation token to get the next page of the results. Adding this to
         * the request returns the rows after the `pageToken`. The `pageToken` should
         * be the value returned in the `nextPageToken` parameter in the response to
         * the `searchMediaItems` request.
         * </pre>
         *
         * <code>string page_token = 3;</code>
         */
        public com.google.protobuf.ByteString getPageTokenBytes() {
            java.lang.Object ref = pageToken_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                pageToken_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * A continuation token to get the next page of the results. Adding this to
         * the request returns the rows after the `pageToken`. The `pageToken` should
         * be the value returned in the `nextPageToken` parameter in the response to
         * the `searchMediaItems` request.
         * </pre>
         *
         * <code>string page_token = 3;</code>
         */
        public Builder setPageToken(java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            pageToken_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * A continuation token to get the next page of the results. Adding this to
         * the request returns the rows after the `pageToken`. The `pageToken` should
         * be the value returned in the `nextPageToken` parameter in the response to
         * the `searchMediaItems` request.
         * </pre>
         *
         * <code>string page_token = 3;</code>
         */
        public Builder clearPageToken() {

            pageToken_ = getDefaultInstance().getPageToken();
            onChanged();
            return this;
        }

        /**
         * <pre>
         * A continuation token to get the next page of the results. Adding this to
         * the request returns the rows after the `pageToken`. The `pageToken` should
         * be the value returned in the `nextPageToken` parameter in the response to
         * the `searchMediaItems` request.
         * </pre>
         *
         * <code>string page_token = 3;</code>
         */
        public Builder setPageTokenBytes(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            pageToken_ = value;
            onChanged();
            return this;
        }

        private com.google.photos.library.v1.proto.Filters filters_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.photos.library.v1.proto.Filters,
                com.google.photos.library.v1.proto.Filters.Builder,
                com.google.photos.library.v1.proto.FiltersOrBuilder>
                filtersBuilder_;

        /**
         * <pre>
         * Filters to apply to the request. Can't be set in conjunction with an
         * `albumId`.
         * </pre>
         *
         * <code>.google.photos.library.v1.Filters filters = 4;</code>
         */
        public boolean hasFilters() {
            return filtersBuilder_ != null || filters_ != null;
        }

        /**
         * <pre>
         * Filters to apply to the request. Can't be set in conjunction with an
         * `albumId`.
         * </pre>
         *
         * <code>.google.photos.library.v1.Filters filters = 4;</code>
         */
        public com.google.photos.library.v1.proto.Filters getFilters() {
            if (filtersBuilder_ == null) {
                return filters_ == null
                        ? com.google.photos.library.v1.proto.Filters.getDefaultInstance()
                        : filters_;
            } else {
                return filtersBuilder_.getMessage();
            }
        }

        /**
         * <pre>
         * Filters to apply to the request. Can't be set in conjunction with an
         * `albumId`.
         * </pre>
         *
         * <code>.google.photos.library.v1.Filters filters = 4;</code>
         */
        public Builder setFilters(com.google.photos.library.v1.proto.Filters value) {
            if (filtersBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                filters_ = value;
                onChanged();
            } else {
                filtersBuilder_.setMessage(value);
            }

            return this;
        }

        /**
         * <pre>
         * Filters to apply to the request. Can't be set in conjunction with an
         * `albumId`.
         * </pre>
         *
         * <code>.google.photos.library.v1.Filters filters = 4;</code>
         */
        public Builder setFilters(com.google.photos.library.v1.proto.Filters.Builder builderForValue) {
            if (filtersBuilder_ == null) {
                filters_ = builderForValue.build();
                onChanged();
            } else {
                filtersBuilder_.setMessage(builderForValue.build());
            }

            return this;
        }

        /**
         * <pre>
         * Filters to apply to the request. Can't be set in conjunction with an
         * `albumId`.
         * </pre>
         *
         * <code>.google.photos.library.v1.Filters filters = 4;</code>
         */
        public Builder mergeFilters(com.google.photos.library.v1.proto.Filters value) {
            if (filtersBuilder_ == null) {
                if (filters_ != null) {
                    filters_ =
                            com.google.photos.library.v1.proto.Filters.newBuilder(filters_)
                                    .mergeFrom(value)
                                    .buildPartial();
                } else {
                    filters_ = value;
                }
                onChanged();
            } else {
                filtersBuilder_.mergeFrom(value);
            }

            return this;
        }

        /**
         * <pre>
         * Filters to apply to the request. Can't be set in conjunction with an
         * `albumId`.
         * </pre>
         *
         * <code>.google.photos.library.v1.Filters filters = 4;</code>
         */
        public Builder clearFilters() {
            if (filtersBuilder_ == null) {
                filters_ = null;
                onChanged();
            } else {
                filters_ = null;
                filtersBuilder_ = null;
            }

            return this;
        }

        /**
         * <pre>
         * Filters to apply to the request. Can't be set in conjunction with an
         * `albumId`.
         * </pre>
         *
         * <code>.google.photos.library.v1.Filters filters = 4;</code>
         */
        public com.google.photos.library.v1.proto.Filters.Builder getFiltersBuilder() {

            onChanged();
            return getFiltersFieldBuilder().getBuilder();
        }

        /**
         * <pre>
         * Filters to apply to the request. Can't be set in conjunction with an
         * `albumId`.
         * </pre>
         *
         * <code>.google.photos.library.v1.Filters filters = 4;</code>
         */
        public com.google.photos.library.v1.proto.FiltersOrBuilder getFiltersOrBuilder() {
            if (filtersBuilder_ != null) {
                return filtersBuilder_.getMessageOrBuilder();
            } else {
                return filters_ == null
                        ? com.google.photos.library.v1.proto.Filters.getDefaultInstance()
                        : filters_;
            }
        }

        /**
         * <pre>
         * Filters to apply to the request. Can't be set in conjunction with an
         * `albumId`.
         * </pre>
         *
         * <code>.google.photos.library.v1.Filters filters = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.photos.library.v1.proto.Filters,
                com.google.photos.library.v1.proto.Filters.Builder,
                com.google.photos.library.v1.proto.FiltersOrBuilder>
        getFiltersFieldBuilder() {
            if (filtersBuilder_ == null) {
                filtersBuilder_ =
                        new com.google.protobuf.SingleFieldBuilderV3<
                                com.google.photos.library.v1.proto.Filters,
                                com.google.photos.library.v1.proto.Filters.Builder,
                                com.google.photos.library.v1.proto.FiltersOrBuilder>(
                                getFilters(), getParentForChildren(), isClean());
                filters_ = null;
            }
            return filtersBuilder_;
        }

        @java.lang.Override
        public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
        }

        // @@protoc_insertion_point(builder_scope:google.photos.library.v1.SearchMediaItemsRequest)
    }

    // @@protoc_insertion_point(class_scope:google.photos.library.v1.SearchMediaItemsRequest)
    private static final com.google.photos.library.v1.proto.SearchMediaItemsRequest DEFAULT_INSTANCE;

    static {
        DEFAULT_INSTANCE = new com.google.photos.library.v1.proto.SearchMediaItemsRequest();
    }

    public static com.google.photos.library.v1.proto.SearchMediaItemsRequest getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SearchMediaItemsRequest> PARSER =
            new com.google.protobuf.AbstractParser<SearchMediaItemsRequest>() {
                @java.lang.Override
                public SearchMediaItemsRequest parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new SearchMediaItemsRequest(input, extensionRegistry);
                }
            };

    public static com.google.protobuf.Parser<SearchMediaItemsRequest> parser() {
        return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SearchMediaItemsRequest> getParserForType() {
        return PARSER;
    }

    @java.lang.Override
    public com.google.photos.library.v1.proto.SearchMediaItemsRequest getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }
}
